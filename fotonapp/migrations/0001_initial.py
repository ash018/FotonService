# Generated by Django 2.1.8 on 2019-11-11 06:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('Id', models.AutoField(db_column='AreaId', primary_key=True, serialize=False)),
                ('AreaName', models.CharField(db_column='AreaName', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'Area',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EngTarget',
            fields=[
                ('Id', models.AutoField(db_column='TargetId', primary_key=True, serialize=False)),
                ('FreeService', models.IntegerField(db_column='FreeService', default=0)),
                ('PaidService', models.IntegerField(db_column='PaidService', default=0)),
                ('WarrantyService', models.IntegerField(db_column='WarrantyService', default=0)),
                ('EntryDate', models.DateTimeField(db_column='EntryDate')),
                ('EngUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EngTarget_EngUser', to=settings.AUTH_USER_MODEL)),
                ('EntryBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EngTarget_EntryBy', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'EngTarget',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MotorTechnician',
            fields=[
                ('Id', models.AutoField(db_column='TechnicianId', primary_key=True, serialize=False)),
                ('Name', models.CharField(db_column='TechnicianName', max_length=100)),
                ('Designation', models.CharField(db_column='Designation', max_length=100)),
                ('StaffId', models.CharField(db_column='StaffId', max_length=100, unique=True)),
                ('MobileNo', models.CharField(db_column='MobileNo', max_length=20)),
            ],
            options={
                'db_table': 'MotorTechnician',
                'verbose_name_plural': 'Motor Technician',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RowStatus',
            fields=[
                ('Id', models.AutoField(db_column='RowStatusId', primary_key=True, serialize=False)),
                ('Name', models.CharField(db_column='Name', max_length=10)),
            ],
            options={
                'db_table': 'RowStatus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceCallType',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('CallTypeName', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'ServiceCallType',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('Id', models.AutoField(db_column='CategoryId', primary_key=True, serialize=False)),
                ('CategoryDetails', models.CharField(db_column='CategoryDetails', max_length=50)),
            ],
            options={
                'db_table': 'ServiceCategory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceDetails',
            fields=[
                ('Id', models.AutoField(db_column='ServiceDetailsId', primary_key=True, serialize=False)),
                ('CustomerName', models.CharField(max_length=100)),
                ('Mobile', models.CharField(max_length=20)),
                ('PurchaseDate', models.DateTimeField()),
                ('HoursProvided', models.IntegerField()),
                ('DateOfInstallation', models.DateTimeField()),
                ('ServiceDemandDate', models.DateTimeField()),
                ('ServiceStartDate', models.DateTimeField()),
                ('ServiceEndDate', models.DateTimeField()),
                ('ServiceIncome', models.FloatField()),
                ('VisitDate', models.DateTimeField()),
                ('MobileCreatedDT', models.DateTimeField()),
                ('MobileEditedDT', models.DateTimeField()),
                ('MobileLogCount', models.IntegerField()),
                ('MobileId', models.IntegerField()),
                ('ServerInsertDateTime', models.DateTimeField(auto_now_add=True)),
                ('ServerUpdateDateTime', models.DateTimeField(auto_now=True)),
                ('ServiceRatting', models.CharField(db_column='ServiceRatting', default='0', max_length=20)),
                ('IsVerify', models.ForeignKey(db_column='IsVerify', on_delete=django.db.models.deletion.CASCADE, to='fotonapp.RowStatus')),
                ('ServiceCallTypeId', models.ForeignKey(db_column='ServiceCallTypeId', on_delete=django.db.models.deletion.CASCADE, to='fotonapp.ServiceCallType')),
                ('ServiceCategoryId', models.ForeignKey(db_column='ServiceCategoryId', on_delete=django.db.models.deletion.CASCADE, to='fotonapp.ServiceCategory')),
                ('SupervisorCode', models.ForeignKey(db_column='SupervisorCode', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ServiceDetails',
                'verbose_name_plural': 'Service Details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('Id', models.AutoField(db_column='TerritoryId', primary_key=True, serialize=False)),
                ('Name', models.CharField(db_column='TerritoryName', max_length=100)),
                ('Code', models.CharField(db_column='TerritoryCode', max_length=50)),
                ('Notes', models.CharField(db_column='Notes', max_length=100)),
            ],
            options={
                'db_table': 'Territory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TsaTarget',
            fields=[
                ('Id', models.AutoField(db_column='TargetId', primary_key=True, serialize=False)),
                ('FreeService', models.IntegerField(db_column='FreeService', default=0)),
                ('PaidService', models.IntegerField(db_column='PaidService', default=0)),
                ('WarrantyService', models.IntegerField(db_column='WarrantyService', default=0)),
                ('EntryDate', models.DateTimeField(db_column='EntryDate')),
                ('EntryBy', models.ForeignKey(db_column='EntryBy', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'TsaTarget',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserArea',
            fields=[
                ('Id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('AreaId', models.ManyToManyField(db_column='AreaId', to='fotonapp.Area')),
                ('UserId', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserArea',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('UserName', models.CharField(max_length=50)),
                ('Password', models.CharField(max_length=50)),
                ('IsActive', models.ForeignKey(db_column='IsActive', on_delete=django.db.models.deletion.CASCADE, to='fotonapp.RowStatus')),
                ('MotorTechnicianId', models.ForeignKey(db_column='MotorTechnicianId', default=1, on_delete=django.db.models.deletion.CASCADE, to='fotonapp.MotorTechnician')),
                ('user', models.ForeignKey(db_column='SupervisorId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'TsaTsoLogin',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='tsatarget',
            name='TsaTsoUser',
            field=models.ForeignKey(db_column='EngUser', on_delete=django.db.models.deletion.CASCADE, to='fotonapp.UserInfo'),
        ),
        migrations.AddField(
            model_name='servicedetails',
            name='UserId',
            field=models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='fotonapp.UserInfo'),
        ),
        migrations.AddField(
            model_name='motortechnician',
            name='TerritoryId',
            field=models.ManyToManyField(db_column='TerritoryId', to='fotonapp.Territory'),
        ),
        migrations.AddField(
            model_name='motortechnician',
            name='user',
            field=models.ForeignKey(db_column='SupervisorCode', default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='area',
            name='TerritoryId',
            field=models.ManyToManyField(db_column='TerritoryId', to='fotonapp.Territory'),
        ),
    ]
